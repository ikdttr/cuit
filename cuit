#!/usr/bin/perl
# cuit - CUI client for Twitter
#
# author  Tetsuro IKEDA (mir)
# license GPLv2
my $version = "0.3";

use strict;
use Net::Twitter;
use Term::ReadLine;
use encoding 'utf-8';
binmode STDIN,  ":utf8";
binmode STDOUT, ":utf8";

#start main
print "\nWelcome to cuit!! version " . $version . "\n";
my $term = new Term::ReadLine "my term";
my $u = $term->readline("username: ");
chomp $u;
system "stty -echo";
my $p = $term->readline("password: ");
chomp $p;
system "stty echo";
print "\n\n";

print "To update your status, push Ctrl+c.\n";
print "To delete previous status, input 'delete' in your status\n";
print "To exit program, input 'quit' in your status.\n\n";

my $twit = Net::Twitter->new(
    username => $u,
    password => $p
    );
my $latest_id = 0;
my $latest_update_id = -1;
my $sleep_sec = 180;
my $mode = 0;

$SIG{ INT } = sub
{
    if ($mode == 1)
    {
	update_status();
    }
};

while (1)
{
    $latest_id = print_friends($latest_id);
    sleep($sleep_sec);
}

#end main

sub lpad
{
    my $str;
    my $res;
    my $blank = "                           ";
    my $padding_size = 13;
    ($str) = @_;
    if (length($str) < $padding_size)
    {
	$res = substr($blank,0,($padding_size - length($str))) . $str; 
	return $res;
    }
    else
    {
	return $str;
    } 
}

sub print_friends
{
    my $id = $_[0];
    my $param;
    my $array_ref;
    if ($id > 0)
    {
	$array_ref = $twit->friends_timeline({since_id => $id});
    }
    else
    {
	$array_ref = $twit->friends_timeline();
    }
    if ( my $err = $@ ) {
        die $@ unless blessed $err and $err->isa('Net::Twitter::Error');
        warn "HTTP Response Code: ", $err->code, "\n",
	"HTTP Message......: ", $err->message, "\n",
	"Twitter error.....: ", $err->error, "\n";
	exit;
    }
    $mode = 1;
    if ($array_ref)
    {
	@{$array_ref} = reverse(@{$array_ref});
	foreach my $hash_ref ( @$array_ref ){
	    $id = $hash_ref->{'id'};
	    my $screen_name = $hash_ref->{'user'}{'screen_name'};
	    my $text = $hash_ref->{'text'};
	    $text =~ s/\n/ /g;
	    print lpad($screen_name) . ": " . $text . "\n";
	}
    }
    return $id;
}

sub update_status
{
    $mode = 0;
    my $head = "\nupdate(" . $u . "): ";
    my $str = $term->readline($head);
    chomp $str;
    if (length($str) > 0)
    {
	if ($str eq "quit")
	{
	    print "bye.\n";
	    exit;
	}
	elsif ($str eq "delete")
	{
	    if ($latest_update_id > 0)
	    {
		# this cause error but we donnot care.
		$twit->destroy_status({id => $latest_update_id});
	    }
	}
	else
	{
	    my $res = $twit->update($str);
	    if ( my $err = $@ )
	    {
		die $@ unless blessed $err && $err->isa('Net::Twitter::Error');
		warn "HTTP Response Code: ", $err->code, "\n",
		"HTTP Message......: ", $err->message, "\n",
		"Twitter error.....: ", $err->error, "\n";
		exit;
	    }
	    $latest_update_id = $res->{'id'};
	}
	$latest_id = 0;
    }
    else
    {
	print "input canceled";
    }
    print "\n";
}
